// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Equipments {
  id        String @map("_id") @id @default(uuid())
  name      String
  model     String 
  brand     String 
  key       String @unique
  nationalKey     String  @map("national_key") @unique
  status    EquipmentStatus
  typeRepair TypeRepair?
  condition String
  MedicalServiceId   String
  CareCenterId   String
  description String?
  CareCenter     CareCenter @relation(fields: [CareCenterId], references: [id])
  MedicalService     MedicalServices @relation(fields: [MedicalServiceId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
}

model CareCenter {
  id        String @map("_id") @id @default(uuid())
  name      String
  typeCenter   Int
  director  String?
  MedicalService   MedicalServices[]
  Equipments Equipments[]
  StateId   String @db.ObjectId
  MunicipalityId   String @db.ObjectId
  State     States @relation(fields: [StateId], references: [id])
  municipality     municipalities @relation(fields: [MunicipalityId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MedicalServices {
  id        String @map("_id") @id @default(uuid())
  service   String
  floor     Int
  Equipments Equipments[]
  CareCenterId   String
  CareCenter     CareCenter @relation(fields: [CareCenterId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Operator {
  id        String @map("_id") @id @default(uuid())
  name      String
  nationalId     String? @unique @map("national_id")
  phoneNumber  String? @unique
  email     String? @unique
  company   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model States {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  municipalities municipalities[]
  careCenters CareCenter[]
}

model municipalities {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  StateId   String @db.ObjectId
  State     States @relation(fields: [StateId], references: [id])
  careCenters CareCenter[]
}

enum EquipmentStatus {
  operative
  inoperative
}

enum condition {
  good
  regular
  bad
}

enum TypeRepair {
  preventive
  corrective
  technical_leave
  technical_revision
}